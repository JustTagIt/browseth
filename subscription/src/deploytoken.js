const Browseth = require('browseth').default;
const {XMLHttpRequest} = require('xmlhttprequest');

global.XMLHttpRequest = XMLHttpRequest;

const subabi = [
  {
    constant: true,
    inputs: [],
    name: 'name',
    outputs: [{name: '', type: 'string'}],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [{name: '_tokenId', type: 'uint256'}],
    name: 'getApproved',
    outputs: [{name: '', type: 'address'}],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: false,
    inputs: [
      {name: '_to', type: 'address'},
      {name: '_tokenId', type: 'uint256'},
    ],
    name: 'approve',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: true,
    inputs: [{name: '_index', type: 'uint256'}],
    name: 'getTokenId',
    outputs: [{name: '', type: 'uint256'}],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [{name: '_tokenId', type: 'uint256'}],
    name: 'expiresAt',
    outputs: [{name: '', type: 'uint256'}],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'totalSupply',
    outputs: [{name: '', type: 'uint256'}],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: false,
    inputs: [
      {name: '_from', type: 'address'},
      {name: '_to', type: 'address'},
      {name: '_tokenId', type: 'uint256'},
    ],
    name: 'transferFrom',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: true,
    inputs: [
      {name: '_owner', type: 'address'},
      {name: '_index', type: 'uint256'},
    ],
    name: 'tokenOfOwnerByIndex',
    outputs: [{name: '', type: 'uint256'}],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [{name: '_subscriptionLength', type: 'uint256'}],
    name: 'getAmountFromTime',
    outputs: [{name: '_amount', type: 'uint256'}],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: false,
    inputs: [],
    name: 'unpause',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: false,
    inputs: [
      {name: '_from', type: 'address'},
      {name: '_to', type: 'address'},
      {name: '_tokenId', type: 'uint256'},
    ],
    name: 'safeTransferFrom',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: true,
    inputs: [{name: '_tokenId', type: 'uint256'}],
    name: 'exists',
    outputs: [{name: '', type: 'bool'}],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [{name: '_index', type: 'uint256'}],
    name: 'tokenByIndex',
    outputs: [{name: '', type: 'uint256'}],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: false,
    inputs: [{name: '_priceCurve', type: 'address'}],
    name: 'setPriceCurve',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: false,
    inputs: [{name: '_tokenId', type: 'uint256'}],
    name: 'renew',
    outputs: [],
    payable: true,
    stateMutability: 'payable',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'paused',
    outputs: [{name: '', type: 'bool'}],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [{name: '_tokenId', type: 'uint256'}],
    name: 'ownerOf',
    outputs: [{name: '', type: 'address'}],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [{name: '_owner', type: 'address'}],
    name: 'balanceOf',
    outputs: [{name: '', type: 'uint256'}],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: false,
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: false,
    inputs: [],
    name: 'pause',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'owner',
    outputs: [{name: '', type: 'address'}],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'symbol',
    outputs: [{name: '', type: 'string'}],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'getPriceCurve',
    outputs: [{name: '', type: 'address'}],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: false,
    inputs: [{name: '_to', type: 'address'}, {name: '_approved', type: 'bool'}],
    name: 'setApprovalForAll',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'getMinimumPrice',
    outputs: [{name: '', type: 'uint256'}],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: false,
    inputs: [
      {name: '_from', type: 'address'},
      {name: '_to', type: 'address'},
      {name: '_tokenId', type: 'uint256'},
      {name: '_data', type: 'bytes'},
    ],
    name: 'safeTransferFrom',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: true,
    inputs: [{name: '_tokenId', type: 'uint256'}],
    name: 'tokenURI',
    outputs: [{name: '', type: 'string'}],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [
      {name: '_owner', type: 'address'},
      {name: '_operator', type: 'address'},
    ],
    name: 'isApprovedForAll',
    outputs: [{name: '', type: 'bool'}],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: false,
    inputs: [{name: '_newOwner', type: 'address'}],
    name: 'transferOwnership',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{name: '_priceCurve', type: 'address'}],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {payable: true, stateMutability: 'payable', type: 'fallback'},
  {anonymous: false, inputs: [], name: 'Pause', type: 'event'},
  {anonymous: false, inputs: [], name: 'Unpause', type: 'event'},
  {
    anonymous: false,
    inputs: [{indexed: true, name: 'previousOwner', type: 'address'}],
    name: 'OwnershipRenounced',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {indexed: true, name: 'previousOwner', type: 'address'},
      {indexed: true, name: 'newOwner', type: 'address'},
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {indexed: true, name: '_from', type: 'address'},
      {indexed: true, name: '_to', type: 'address'},
      {indexed: false, name: '_tokenId', type: 'uint256'},
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {indexed: true, name: '_owner', type: 'address'},
      {indexed: true, name: '_approved', type: 'address'},
      {indexed: false, name: '_tokenId', type: 'uint256'},
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {indexed: true, name: '_owner', type: 'address'},
      {indexed: true, name: '_operator', type: 'address'},
      {indexed: false, name: '_approved', type: 'bool'},
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
];

const subbin =
  '';

const curvebin =
  '608060405234801561001057600080fd5b5060405160408061027d83398101604052805160209091015160009190915560015561023c806100416000396000f3006080604052600436106100825763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166324b545e08114610087578063256645ca146100bc57806333761bf5146100e35780633878bb2d146100fd578063564aa87b146101155780635ccab7391461012a578063ac4316cb14610142575b600080fd5b34801561009357600080fd5b5061009f600435610157565b6040805167ffffffffffffffff9092168252519081900360200190f35b3480156100c857600080fd5b506100d1610182565b60408051918252519081900360200190f35b3480156100ef57600080fd5b506100fb600435610188565b005b34801561010957600080fd5b506100d16004356101b8565b34801561012157600080fd5b506100d16101d0565b34801561013657600080fd5b506100fb6004356101d6565b34801561014e57600080fd5b506100d1610206565b600060015460005402821015151561016e57600080fd5b6001548281151561017b57fe5b0492915050565b60005490565b600081815560405182917fd6f065b257f06a6bdb1a65de715fc4bd7d1936a621fe6db83ee006f7bdd1ab7b91a250565b600080548210156101c857600080fd5b506001540290565b60015490565b600081815560405182917f83ea970c358cb64b0df74ba055d6e9737792c7a110c2649d67055a1c4d5eb24491a250565b60015460005402905600a165627a7a72305820caa81cdf6ccbfbfb0d403a6f1ef9154da271e55833f383e91c8a8c0b7a4801430029';

const curveabi = [
  {
    constant: true,
    inputs: [{name: '_amount', type: 'uint256'}],
    name: 'getTimeFromAmount',
    outputs: [{name: '_subscriptionLength', type: 'uint64'}],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'getMinimumTime',
    outputs: [{name: '', type: 'uint256'}],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: false,
    inputs: [{name: '_costPerSecond', type: 'uint256'}],
    name: 'setCostPerSecond',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: true,
    inputs: [{name: '_subscriptionLength', type: 'uint256'}],
    name: 'getAmountFromTime',
    outputs: [{name: '_amount', type: 'uint256'}],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'getCostPerSecond',
    outputs: [{name: '', type: 'uint256'}],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: false,
    inputs: [{name: '_minimumTime', type: 'uint256'}],
    name: 'setMinimumTime',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'getMinimumPrice',
    outputs: [{name: '', type: 'uint256'}],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {name: '_minimumTime', type: 'uint256'},
      {name: '_costPerSecond', type: 'uint256'},
    ],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [{indexed: true, name: 'minimumTime', type: 'uint256'}],
    name: 'SetMinimumTime',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{indexed: true, name: 'costPerSecond', type: 'uint256'}],
    name: 'SetCostPerSecond',
    type: 'event',
  },
];

const b = new Browseth();

b.wallet = new Browseth.Wallets.Online(b.rpc);

// it('', async () => {
const a = async () => {
  // console.log(abi);
  const transactionListener = new Browseth.Apis.TransactionListener(b.wallet);
  transactionListener.startPolling();

  b.addContract('priceCurve', curveabi, {bytecode: curvebin});
  b.addContract('subscription', subabi, {bytecode: subbin});

  const transactionHash1 = await b.contract.priceCurve
    .deploy(31540000, 380469245)
    .send();
  console.log('transaction hash for paid price curve', transactionHash1);
  const transaction1 = await transactionListener.resolveTransaction(
    transactionHash1,
  );
  console.log('transaction for paid price curve', transaction1);

  const transactionHash2 = await b.contract.priceCurve
    .deploy(3154000000, 0)
    .send();
  console.log('transaction hash for free price curve', transactionHash2);
  const transaction2 = await transactionListener.resolveTransaction(
    transactionHash2,
  );
  console.log('transaction for free price curve', transaction1);

  const transactionHash3 = await b.contract.subscription
    .deploy(transaction1.contractAddress)
    .send();
  console.log('transaction hash for token', transactionHash3);
  const transaction3 = await transactionListener.resolveTransaction(
    transactionHash3,
  );

  const transactionHash4 = await b.contract.subscription
    .deploy(transaction2.contractAddress)
    .send();
  console.log('transaction hash for token', transactionHash4);
  const transaction4 = await transactionListener.resolveTransaction(
    transactionHash4,
  );

  console.log('address for paid token', transaction3.contractAddress);
  console.log('address for free token', transaction4.contractAddress);
};

a();
